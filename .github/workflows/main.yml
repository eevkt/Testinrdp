name: RDP Setup with Ngrok

on: [push]

jobs:
  setup-rdp:
    runs-on: windows-latest

    steps:
    - name: Install Ngrok
      run: |
        curl -o ngrok.zip https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip
        tar -xf ngrok.zip
        move ngrok.exe C:\Windows\System32\
    
    - name: Install jq
      run: |
        curl -o jq.exe https://github.com/stedolan/jq/releases/download/jq-1.6/jq-win64.exe
        move jq.exe C:\Windows\System32\jq.exe
    
    - name: Authenticate Ngrok
      run: |
        ngrok authtoken 2V4ZVr5efWMydD5SRyvxg48Q73t_25NK2LtPxxtDFsMxQzjv6
    
    - name: Start Ngrok for RDP
      run: |
        ngrok tcp 3389 --region eu --log=stdout --log-level=debug > ngrok.log 2>&1
        Start-Sleep -Seconds 10
    
    - name: Get Ngrok Public URL
      run: |
        curl -s http://localhost:4040/api/tunnels | jq -r ".tunnels[0].public_url" > ngrok_url.txt
    
    - name: Output RDP URL
      id: rdp-url
      run: |
        $RDP_URL = Get-Content ngrok_url.txt
        Write-Output "::set-output name=rdp_url::$RDP_URL"
    
    - name: Print RDP URL
      run: |
        echo RDP URL: ${{ steps.rdp-url.outputs.rdp_url }}
        REM Optional: Save to a file or send to email/notification for access

    - name: Strengthen Security
      run: |
        netsh advfirewall set allprofiles state on
        netsh advfirewall firewall add rule name="Allow RDP" dir=in action=allow protocol=TCP localport=3389
        echo Enabling firewall and allowing RDP access for increased security.
    
    - name: Disable Unused Services
      run: |
        sc config SSDPSRV start= disabled
        sc config upnphost start= disabled
        echo Disabled unnecessary services for enhanced security.

    - name: Extend Ngrok Session
      run: |
        for ($i=1; $i -le 16; $i++) {
          Start-Sleep -Seconds 3600
          Write-Output "Keeping Ngrok session alive - Hour $i"
        }
        echo Ngrok session extended to approximately 16 hours.

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        echo Installed Chocolatey package manager.

    - name: Install Windows Updates
      run: |
        powershell Install-WindowsUpdate -AcceptAll -AutoReboot
        echo Installed all pending Windows updates.

    - name: Install Security Tools
      run: |
        choco install sysinternals -y
        choco install malwarebytes -y
        echo Installed Sysinternals and Malwarebytes for added security.

    - name: Enable RDP Network Level Authentication
      run: |
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 1 /f
        echo Enabled Network Level Authentication for RDP.

    - name: Configure Idle Timeout for RDP
      run: |
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v MaxIdleTime /t REG_DWORD /d 7200000 /f
        echo Set idle timeout for RDP to 2 hours.

    - name: Install Git
      run: |
        choco install git -y
        echo Installed Git for version control.

    - name: Install 7-Zip
      run: |
        choco install 7zip -y
        echo Installed 7-Zip for file compression.

    - name: Enable Remote Assistance
      run: |
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Remote Assistance" /v fAllowToGetHelp /t REG_DWORD /d 1 /f
        echo Enabled Remote Assistance.

    - name: Set RDP Encryption Level
      run: |
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v MinEncryptionLevel /t REG_DWORD /d 3 /f
        echo Set RDP encryption level to High.

    - name: Install VS Code
      run: |
        choco install vscode -y
        echo Installed Visual Studio Code.

    - name: Enable Clipboard Redirection for RDP
      run: |
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v fDisableClip /t REG_DWORD /d 0 /f
        echo Enabled clipboard redirection for RDP.

    - name: Set Strong Password Policy
      run: |
        net accounts /minpwlen:12 /maxpwage:30
        echo Set strong password policy for user accounts.

    - name: Disable SMBv1
      run: |
        dism /online /norestart /disable-feature /featurename:SMB1Protocol
        echo Disabled SMBv1 for security.

    - name: Install Python
      run: |
        choco install python -y
        echo Installed Python for scripting and automation.

    - name: Enable File and Printer Sharing
      run: |
        netsh advfirewall firewall set rule group="File and Printer Sharing" new enable=Yes
        echo Enabled file and printer sharing.

    - name: Configure Windows Defender Scan
      run: |
        powershell Start-MpScan -ScanType QuickScan
        echo Initiated a quick scan using Windows Defender.

    - name: Install Node.js
      run: |
        choco install nodejs -y
        echo Installed Node.js for development purposes.

    - name: Create RDP User Account
      run: |
        net user moha moha /add
        net localgroup "Remote Desktop Users" moha /add
        echo Created new RDP user account.

    - name: Set Automatic Updates for Ngrok
      run: |
        schtasks /create /tn "NgrokUpdate" /tr "ngrok update" /sc daily /st 03:00
        echo Set up daily automatic updates for Ngrok.
